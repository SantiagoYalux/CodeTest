@inject SignInManager<Usuario> SignInManager;
@inject UserManager<Usuario> UserManager;
@inject IUserService IUserService;
@using CodeTestTotal.Interfaces;
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<Usuario> SignInManager

@if (SignInManager.IsSignedIn(User))
{
    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        @{
            var claims = User.Claims.ToList();
            var userID = int.Parse(claims[0].Value);

            var user = await IUserService.GetUserById(userID);
            var roles = await UserManager.IsInRoleAsync(user, "Cliente");

            @if (roles == true)
            {

                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Client" asp-action="Index">Tus mascotas</a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Seller" asp-action="ListSellers">Vendedores</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="ListOrders">Pedidos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Client" asp-action="ListClientPets">Clientes</a>
                </li>
            }
        }
    </ul>
    <ul class="navbar-nav">
        <li class="nav-item">
            <span class="nav-link text-dark">Hola, @User.Identity.Name</span>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-action="logout" asp-controller="User">
                <button type="submit" class="nav-link btn btn-link text-dark">
                    Logout
                </button>
            </form>
        </li>
    </ul>
    


}
